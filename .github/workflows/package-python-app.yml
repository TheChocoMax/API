---
name: Build Python Package

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  TRIGGER_BRANCH: main
  FILE_FILTER_PATTERN: '^(?!tests/).*\.py$'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code and fetch tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for modified matching files
        id: check_changes
        run: |
          echo "Trigger branch: $TRIGGER_BRANCH"
          echo "File filter pattern: $FILE_FILTER_PATTERN"

          git fetch origin "$TRIGGER_BRANCH" --depth=2
          MODIFIED=$(git diff --name-only HEAD^ HEAD)

          echo "Modified files:"
          echo "$MODIFIED"

          MATCHING=$(echo "$MODIFIED" | grep -E "$FILE_FILTER_PATTERN" || true)

          echo "Matching files:"
          echo "$MATCHING"

          if [[ -n "$MATCHING" ]]; then
            echo "should_trigger=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_trigger=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Extract version from app/version.py
        id: version
        run: |
          VERSION=$(grep -oP '__version__\s*=\s*"\K[0-9]+\.[0-9]+\.[0-9]+' app/version.py)
          if [[ -z "$VERSION" ]]; then
            echo "Failed to extract version from app/version.py"
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.10'

      - name: Install build dependencies
        run: pip install --user build

      - name: Set PYTHONPATH so setuptools can find version.py
        run: echo "PYTHONPATH=${{ github.workspace }}/app" >> "$GITHUB_ENV"

      - name: Build the binary wheel and source tarball
        run: python -m build
        working-directory: ${{ github.workspace }}

      - name: Create draft release and upload package
        if: steps.check_changes.outputs.should_trigger == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          draft: true
          generate_release_notes: true
          name: Version ${{ steps.version.outputs.version }}
          files: |
            dist/*.tar.gz
            dist/*.whl
